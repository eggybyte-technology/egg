// Package config provides configuration management for the {{.ServiceName}} service.
//
// Overview:
//   - Responsibility: Configuration loading and validation
//   - Key Types: AppConfig struct extending BaseConfig
//   - Concurrency Model: Immutable configuration after initialization
//   - Error Semantics: Configuration errors reported at startup
//   - Performance Notes: Single load operation at service startup
//
// Usage:
//
//	cfg := &config.AppConfig{}
//	servicex.Run(ctx, servicex.WithAppConfig(cfg))
package config

import "go.eggybyte.com/egg/configx"

// AppConfig represents the application configuration for the {{.ServiceName}} service.
//
// This configuration extends BaseConfig which provides:
//   - HTTP/Health/Metrics port configuration
//   - Database connection settings (DB_DSN)
//   - ConfigMap name for Kubernetes dynamic configuration (APP_CONFIGMAP_NAME)
//   - Logging configuration (LOG_LEVEL)
//
// Environment Variables:
//   - HTTP_PORT: HTTP server port (default: 8080)
//   - HEALTH_PORT: Health check endpoint port (default: 8081)
//   - METRICS_PORT: Metrics endpoint port (default: 9091)
//   - DB_DSN: Database connection string (required for database operations)
//   - APP_CONFIGMAP_NAME: Kubernetes ConfigMap name for dynamic config (K8s only)
//   - LOG_LEVEL: Logging level (debug, info, warn, error)
//
// Service-Specific Configuration:
//   Add your service-specific configuration fields below.
//   Use struct tags for environment variable mapping and defaults.
//
// Example:
//
//	type AppConfig struct {
//	    configx.BaseConfig
//	    RateLimitQPS int `env:"RATE_LIMIT_QPS" default:"200"`
//	    MaxRetries   int `env:"MAX_RETRIES" default:"3"`
//	}
//
// Concurrency:
//
//	Safe for concurrent read access after initialization.
//	Do not modify configuration after service startup.
type AppConfig struct {
	// BaseConfig provides standard egg framework configuration fields.
	// See configx.BaseConfig for details on available fields.
	configx.BaseConfig

	// Add service-specific configuration fields below
	// Example:
	// RateLimitQPS int `env:"RATE_LIMIT_QPS" default:"200"`
}
