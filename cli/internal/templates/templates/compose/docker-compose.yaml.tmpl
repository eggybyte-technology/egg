services:
{{if .DatabaseEnabled}}
  # MySQL Database
  mysql:
    image: {{.DatabaseImage}}
    container_name: {{.ProjectName}}-mysql
    environment:
      MYSQL_ROOT_PASSWORD: {{.DatabaseRootPassword}}
      MYSQL_DATABASE: {{.DatabaseName}}
      MYSQL_USER: {{.DatabaseUser}}
      MYSQL_PASSWORD: {{.DatabasePassword}}
    ports:
      - "{{.DatabasePort}}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p{{.DatabaseRootPassword}}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - {{.ProjectName}}-network
{{end}}

  # Backend Services
{{range $serviceName, $config := .BackendServices}}
  {{$serviceName}}:
    image: {{$.DockerRegistry}}/{{$.ProjectName}}-{{$serviceName}}:{{$.Version}}
    container_name: {{$.ProjectName}}-{{$serviceName}}
    restart: unless-stopped
    environment:
      # Service Identity (servicex standard)
      SERVICE_NAME: {{$serviceName}}
      SERVICE_VERSION: {{$.Version}}
      APP_ENV: production
      
      # Logging Configuration
      LOG_LEVEL: info
      
      # Port Configuration (servicex BaseConfig)
      HTTP_PORT: {{if $config.Ports}}{{$config.Ports.HTTP}}{{else}}8080{{end}}
      HEALTH_PORT: {{if $config.Ports}}{{$config.Ports.Health}}{{else}}8081{{end}}
      METRICS_PORT: {{if $config.Ports}}{{$config.Ports.Metrics}}{{else}}9091{{end}}
{{if $.DatabaseEnabled}}
      # Database Configuration (servicex BaseConfig.Database)
      DB_DSN: {{$.DatabaseUser}}:{{$.DatabasePassword}}@tcp(mysql:3306)/{{$.DatabaseName}}?charset=utf8mb4&parseTime=True&loc=Local
      DB_DRIVER: mysql
{{end}}
    ports:
      - "{{if $config.Ports}}{{$config.Ports.HTTP}}{{else}}8080{{end}}:{{if $config.Ports}}{{$config.Ports.HTTP}}{{else}}8080{{end}}"
      - "{{if $config.Ports}}{{$config.Ports.Health}}{{else}}8081{{end}}:{{if $config.Ports}}{{$config.Ports.Health}}{{else}}8081{{end}}"
      - "{{if $config.Ports}}{{$config.Ports.Metrics}}{{else}}9091{{end}}:{{if $config.Ports}}{{$config.Ports.Metrics}}{{else}}9091{{end}}"
{{if $.DatabaseEnabled}}
    depends_on:
      mysql:
        condition: service_healthy
{{end}}
    networks:
      - {{$.ProjectName}}-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:{{if $config.Ports}}{{$config.Ports.Health}}{{else}}8081{{end}}/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
{{end}}
{{if .DatabaseEnabled}}

volumes:
  mysql_data:
{{end}}

networks:
  {{.ProjectName}}-network:
    driver: bridge
